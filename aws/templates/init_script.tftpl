#!/bin/bash

# Install basic dependencies
apt update
apt-get install -y \
  ca-certificates \
  curl \
  gnupg \
  lsb-release

# Install docker
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
apt update
apt-get install -y \
  docker-ce \
  docker-ce-cli \
  containerd.io \
  docker-compose-plugin \
  docker-compose

# Create docker-compose file
DEST="${path_docker_compose_files}"
mkdir -p "$DEST"
cat > "$DEST/docker-compose.yml" <<-EOT
${docker_compose_str}
EOT

# Create xchain indexer config
cat > /xchain_indexer_config_to_mount.json <<-EOT
${xchain_config_file_content}
EOT

# Create blockscout docker-compose systemd unit
cat > /etc/systemd/system/docker_compose.service <<-EOT
# File generated by terraform init_script; DO NOT EDIT
# Copied from https://gist.github.com/Luzifer/7c54c8b0b61da450d10258f0abd3c917

[Unit]
Description=Service for starting blockscout docker compose
After=docker.service network-online.target
Requires=docker.service network-online.target

[Service]
Type=oneshot
RemainAfterExit=yes
User=${user}
ExecStart=/usr/bin/docker compose -f $DEST/docker-compose.yml up -d
ExecStop=/usr/bin/docker compose down

[Install]
WantedBy=multi-user.target
EOT

# Disable journal to syslog forwarding
echo "ForwardToSyslog=no" >> /etc/systemd/journald.conf
systemctl daemon-reload
systemctl restart systemd-journald

# Start docker-compose via systemd
systemctl enable docker_compose
systemctl start docker_compose

# Deploy prometheus node exporter
SCRIPT=/tmp/deploy_node_exporter.sh
cat > "$SCRIPT" <<'EOT'
${deploy_node_exporter_script}
EOT
chmod +x "$SCRIPT"
$SCRIPT

# Deploy grafana agent
cat > /etc/grafana-agent.secrets <<EOT
${agent_secret_file_content}
EOT

SCRIPT=/tmp/deploy_agent.sh
cat > "$SCRIPT" <<'EOT'
${deploy_agent_script}
EOT
chmod +x "$SCRIPT"

export ENV=${agent_env}
export HOSTNAME=${agent_hostname}
$SCRIPT